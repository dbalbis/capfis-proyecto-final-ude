@page
@model CAPFIS.Pages.Admin.Etapas.EditarEtapaModuloModel
@using CAPFIS.Models
@{
    Layout = "/Pages/Shared/_LayoutAdmin.cshtml";
    ViewData["Title"] = "Editar Etapa";
}

<div class="row">
    <div class="col-md-6 mx-auto">
        <h3 style="color: #FFA500;">Editar Etapa de Módulo</h3>

        <!-- Separador -->
        <hr class="text-secondary my-3"
            style="border: none; border-bottom: 2px solid rgba(255, 165, 0, 0.4); margin: 0 1rem 0.5rem 1rem;" />

        <partial name="_StatusMessage" model="Model.StatusMessage" />
        <div id="statusMessageJS" class="text-danger mb-2"></div>

        <!-- Seleccionar etapa -->
        <form method="get">
            <label for="etapaSelect" class="form-label">Seleccione una etapa:</label>
            <select class="form-select mb-3" id="etapaSelect" name="SelectedEtapaId" onchange="this.form.submit()">
                <option value="">-- Seleccione --</option>
                @foreach (var etapa in Model.EtapasList)
                {
                    <option value="@etapa.Value" selected="@(etapa.Value == Model.SelectedEtapaId?.ToString() ? true : (bool?)null)">
                        @etapa.Text
                    </option>
                }
            </select>
        </form>

        <!-- Separador -->
        <hr class="text-secondary my-3"
            style="border: none; border-bottom: 2px solid rgba(255, 165, 0, 0.4); margin: 0 1rem 0.5rem 1rem;" />

        @if (Model.SelectedEtapaId != null)
        {
            <form method="post" id="formEditarEtapa">
                <input type="hidden" asp-for="SelectedEtapaId" />
                <input type="hidden" asp-for="Input.ContenidoJson" id="contenidoJsonHidden" />

                <!-- Módulo -->
                <div class="form-floating mb-3">
                    <select asp-for="Input.ModuloInteractivoId" class="form-select" asp-items="Model.ModulosList"></select>
                    <label asp-for="Input.ModuloInteractivoId">Módulo</label>
                    <span asp-validation-for="Input.ModuloInteractivoId" class="text-danger"></span>
                </div>

                <!-- Título -->
                <div class="form-floating mb-3">
                    <input asp-for="Input.Titulo" class="form-control" placeholder="Título de la etapa" />
                    <label asp-for="Input.Titulo">Título de la etapa</label>
                    <span asp-validation-for="Input.Titulo" class="text-danger"></span>
                </div>

                <!-- Tipo-->
                <div class="form-floating mb-3">
                    <input asp-for="Input.Tipo" class="form-control" readonly />
                    <label asp-for="Input.Tipo">Tipo de Etapa</label>
                </div>

                <!-- Campos según tipo -->
                <div id="contenidoVideo" class="mb-3" style="display:none;">
                    <label class="form-label">URL del Video</label>
                    <input asp-for="Input.ContenidoUrl" class="form-control" placeholder="https://www.youtube.com/watch?v=..." />
                    <span asp-validation-for="Input.ContenidoUrl" class="text-danger"></span>

                    <label class="form-label">Créditos</label>
                    <input asp-for="Input.ContenidoTexto" class="form-control" placeholder="Créditos del video" />
                    <span asp-validation-for="Input.ContenidoTexto" class="text-danger"></span>
                </div>

                <div id="contenidoAhorcado" class="mb-3" style="display:none;">
                    <label class="form-label">Palabra a adivinar</label>
                    <input asp-for="Input.ContenidoTexto" class="form-control" placeholder="Palabra" />
                    <span asp-validation-for="Input.ContenidoTexto" class="text-danger"></span>
                </div>

                <!-- Quiz -->
                <div id="contenidoQuiz" class="mb-3" style="display:none;">
                    <label class="form-label">Preguntas del Quiz</label>
                    <div id="preguntasList"></div>
                    <button type="button" class="btn btn-outline-warning btn-sm mt-2" id="agregarPreguntaBtn">Agregar Pregunta</button>
                </div>

                <div id="contenidoSopa" class="mb-3" style="display:none;">
                    <label class="form-label">Palabras de la Sopa de Letras</label>
                    <div id="palabrasSopaList"></div>
                    <button type="button" class="btn btn-outline-warning btn-sm mt-2" id="agregarPalabraSopaBtn">Agregar palabra</button>
                </div>

                <div id="contenidoEncuentra" class="mb-3" style="display:none;">
                    <label class="form-label">Texto base</label>
                    <textarea asp-for="Input.ContenidoTexto" class="form-control" rows="5"></textarea>

                    <label class="form-label mt-2">Palabras clave</label>
                    <div id="palabrasClaveList"></div>
                    <button type="button" class="btn btn-outline-warning btn-sm mt-2" id="agregarPalabraBtn">Agregar palabra</button>
                </div>

                <button type="submit"
                        class="btn btn-outline-warning fw-bold px-4 login-btn w-100 mt-3"
                        style="border-width:2px; color:#FFA500; border-color:#FFA500; background-color:transparent;">
                    Guardar Etapa
                </button>
            </form>
        }
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        const tipo = "@Model.Input.Tipo";
        const contenidoVideo = document.getElementById('contenidoVideo');
        const contenidoAhorcado = document.getElementById('contenidoAhorcado');
        const contenidoQuiz = document.getElementById('contenidoQuiz');
        const contenidoSopa = document.getElementById('contenidoSopa');
        const contenidoEncuentra = document.getElementById('contenidoEncuentra');

        const preguntasList = document.getElementById('preguntasList');
        const agregarPreguntaBtn = document.getElementById('agregarPreguntaBtn');

        const palabrasSopaList = document.getElementById('palabrasSopaList');
        const agregarPalabraSopaBtn = document.getElementById('agregarPalabraSopaBtn');

        const palabrasClaveList = document.getElementById('palabrasClaveList');
        const agregarPalabraBtn = document.getElementById('agregarPalabraBtn');

        const contenidoJsonHidden = document.getElementById('contenidoJsonHidden');
        const form = document.getElementById('formEditarEtapa');
        const statusDiv = document.getElementById('statusMessageJS');

        // Mostrar campos según tipo
        switch(tipo){
            case "Video": contenidoVideo.style.display="block"; break;
            case "Ahorcado": contenidoAhorcado.style.display="block"; break;
            case "Quiz": contenidoQuiz.style.display="block"; break;
            case "SopaDeLetras": contenidoSopa.style.display="block"; break;
            case "EncuentraLaPalabra": contenidoEncuentra.style.display="block"; break;
        }

        // CARGAR DATOS EXISTENTES PARA EDICIÓN
        document.addEventListener("DOMContentLoaded", () => {
            // Quiz
            if(tipo === "Quiz" && contenidoJsonHidden.value) {
                try {
                    const quizData = JSON.parse(contenidoJsonHidden.value);
                    quizData.forEach(pregunta => {
                        const div = document.createElement('div');
                        div.classList.add('border', 'p-2', 'mb-2', 'rounded');
                        div.innerHTML = `
                            <input type="text" class="form-control mb-1" placeholder="Texto de la pregunta" value="${pregunta.Pregunta || ''}" />
                            <input type="text" class="form-control mb-1" placeholder="Respuesta 1" value="${pregunta.Respuestas[0] || ''}" />
                            <input type="text" class="form-control mb-1" placeholder="Respuesta 2" value="${pregunta.Respuestas[1] || ''}" />
                            <input type="text" class="form-control mb-1" placeholder="Respuesta 3" value="${pregunta.Respuestas[2] || ''}" />
                            <input type="number" min="1" max="3" class="form-control mb-1" placeholder="Número de respuesta correcta (1-3)" required value="${pregunta.Correcta || ''}" />
                            <button type="button" class="btn btn-outline-danger btn-sm mt-1">Eliminar</button>
                        `;
                        preguntasList.appendChild(div);

                        // Botón eliminar
                        div.querySelector('button').addEventListener('click', () => {
                            div.remove();
                            renderizarNumerosPreguntas();
                        });
                    });
                    renderizarNumerosPreguntas();
                } catch(e) {}
            }

            // Sopa de Letras
            if(tipo === "SopaDeLetras" && contenidoJsonHidden.value) {
                try {
                    const palabras = JSON.parse(contenidoJsonHidden.value);
                    palabras.forEach(palabra => {
                        const div = document.createElement('div');
                        div.classList.add('input-group', 'mb-1');
                        div.innerHTML = `
                            <input type="text" class="form-control" placeholder="Palabra" value="${palabra}" />
                            <button type="button" class="btn btn-outline-danger" onclick="this.parentElement.remove()">Eliminar</button>
                        `;
                        palabrasSopaList.appendChild(div);
                    });
                } catch(e) {}
            }

            // Encuentra la Palabra
            if(tipo === "EncuentraLaPalabra" && contenidoJsonHidden.value) {
                try {
                    const encuentraData = JSON.parse(contenidoJsonHidden.value);

                    // Cargar el texto base en el textarea
                    const textareaTexto = contenidoEncuentra.querySelector('textarea');
                    if(encuentraData.Texto && textareaTexto) {
                        textareaTexto.value = encuentraData.Texto;
                    }

                    // Cargar las palabras clave
                    if(encuentraData.PalabrasClave) {
                        encuentraData.PalabrasClave.forEach(palabra => {
                            const div = document.createElement('div');
                            div.classList.add('input-group', 'mb-1');
                            div.innerHTML = `
                                <input type="text" class="form-control" placeholder="Palabra clave" value="${palabra}" />
                                <button type="button" class="btn btn-outline-danger" onclick="this.parentElement.remove()">Eliminar</button>
                            `;
                            palabrasClaveList.appendChild(div);
                        });
                    }
                } catch(e) {}
            }
        });

        // Enumerear preguntas Quiz
        function renderizarNumerosPreguntas() {
            Array.from(preguntasList.children).forEach((div, idx) => {
                let numeroSpan = div.querySelector('.numeroPregunta');
                if (!numeroSpan) {
                    numeroSpan = document.createElement('span');
                    numeroSpan.classList.add('numeroPregunta', 'fw-bold', 'me-2');
                    div.prepend(numeroSpan); // colocar al inicio del div
                }
                numeroSpan.innerText = `${idx + 1}.`;
            });
        }

        // Agregar nueva pregunta
        agregarPreguntaBtn?.addEventListener('click', () => {
            const div = document.createElement('div');
            div.classList.add('border', 'p-2', 'mb-2', 'rounded');
            div.innerHTML = `
                <input type="text" class="form-control mb-1" placeholder="Texto de la pregunta" />
                <input type="text" class="form-control mb-1" placeholder="Respuesta 1" />
                <input type="text" class="form-control mb-1" placeholder="Respuesta 2" />
                <input type="text" class="form-control mb-1" placeholder="Respuesta 3" />
                <input type="number" min="1" max="3" class="form-control mb-1" placeholder="Número de respuesta correcta (1-3)" required />
                <button type="button" class="btn btn-outline-danger btn-sm mt-1">Eliminar</button>
            `;
            preguntasList.appendChild(div);

            // Botón eliminar
            div.querySelector('button').addEventListener('click', () => {
                div.remove();
                renderizarNumerosPreguntas(); // actualizar numeración al eliminar
            });

            renderizarNumerosPreguntas(); // actualizar numeración al agregar
        });

        // Sopa de letras
        agregarPalabraSopaBtn?.addEventListener('click', () => {
            const div = document.createElement('div');
            div.classList.add('input-group', 'mb-1');
            div.innerHTML = `
                <input type="text" class="form-control" placeholder="Palabra" />
                <button type="button" class="btn btn-outline-danger" onclick="this.parentElement.remove()">Eliminar</button>
            `;
            palabrasSopaList.appendChild(div);
        });

        // Encuentra la palabra
        agregarPalabraBtn?.addEventListener('click', () => {
            const div = document.createElement('div');
            div.classList.add('input-group', 'mb-1');
            div.innerHTML = `
                <input type="text" class="form-control" placeholder="Palabra clave" />
                <button type="button" class="btn btn-outline-danger" onclick="this.parentElement.remove()">Eliminar</button>
            `;
            palabrasClaveList.appendChild(div);
        });

        // Serializar JSON
        form.addEventListener('submit', (e) => {
            statusDiv.innerText = "";
            let data = null;

            // Validaciones
            if (tipo === 'Video') {
                const urlInput = contenidoVideo.querySelector('input');
                const creditosInput = contenidoVideo.querySelector('input[placeholder*="Créditos"]');
                if (!urlInput.value.trim()) {
                    statusDiv.innerText = "La URL del video no puede estar vacía.";
                    e.preventDefault();
                    return false;
                }

                if (!creditosInput.value.trim()) {
                    statusDiv.innerText = "Los créditos del video no pueden estar vacíos.";
                    e.preventDefault();
                    return false;
                 }
            }

            if (tipo === 'Ahorcado') {
                const palabraInput = contenidoAhorcado.querySelector('input');
                if (!palabraInput.value.trim()) {
                    statusDiv.innerText = "La palabra a adivinar no puede estar vacía.";
                    e.preventDefault();
                    return false;
                }
            }

            if (tipo === 'Quiz') {
                const preguntas = Array.from(preguntasList.children);

                if (preguntas.length === 0) {
                    statusDiv.innerText = "Debe agregar al menos una pregunta.";
                    e.preventDefault();
                    return false;
                }

                const quizData = [];

                for (const div of preguntas) {
                    const inputs = div.querySelectorAll('input');
                    const preguntaText = inputs[0].value.trim();
                    const respuestas = [inputs[1].value.trim(), inputs[2].value.trim(), inputs[3].value.trim()];
                    const correcta = parseInt(inputs[4].value);

                    // Validación
                    if (!preguntaText || respuestas.some(r => !r) || isNaN(correcta) || correcta < 1 || correcta > 3) {
                        statusDiv.innerText = "Cada pregunta debe tener texto, 3 respuestas y una respuesta correcta entre 1 y 3.";
                        e.preventDefault();
                        return false;
                    }

                    quizData.push({
                        Pregunta: preguntaText,
                        Respuestas: respuestas,
                        Correcta: correcta
                    });
                }

                data = quizData;

            } else if (tipo === 'SopaDeLetras') {
                const palabras = Array.from(palabrasSopaList.querySelectorAll('input'))
                    .map(i => i.value.trim())
                    .filter(palabra => palabra !== '');

                if (palabras.length === 0) {
                    statusDiv.innerText = "Debe agregar al menos una palabra para la sopa de letras.";
                    e.preventDefault();
                    return false;
                }

                // Verificar que no se agreguen palabras vacías
                const palabrasVacias = Array.from(palabrasSopaList.querySelectorAll('input'))
                    .some(i => !i.value.trim());

                if (palabrasVacias) {
                    statusDiv.innerText = "Todas las palabras de la sopa de letras deben tener contenido.";
                    e.preventDefault();
                    return false;
                }

                data = palabras;

            } else if (tipo === 'EncuentraLaPalabra') {
                const textoBase = contenidoEncuentra.querySelector('textarea').value.trim();
                const palabrasClave = Array.from(palabrasClaveList.querySelectorAll('input')).map(i => i.value.trim());

                
                if (!textoBase) {
                    statusDiv.innerText = "El texto base no puede estar vacío.";
                    e.preventDefault();
                    return false;
                }

                if (palabrasClave.length === 0 || palabrasClave.every(p => p === '')) {
                    statusDiv.innerText = "Debe agregar al menos una palabra clave.";
                    e.preventDefault();
                    return false;
                }

                // Verificar que no haya palabras clave vacías
                const palabrasVacias = Array.from(palabrasClaveList.querySelectorAll('input'))
                    .some(i => !i.value.trim());

                if (palabrasVacias) {
                    statusDiv.innerText = "Todas las palabras clave deben tener contenido.";
                    e.preventDefault();
                    return false;
                }

                data = {
                    Texto: contenidoEncuentra.querySelector('textarea').value,
                    PalabrasClave: Array.from(palabrasClaveList.querySelectorAll('input')).map(i => i.value)
                };
            }

            contenidoJsonHidden.value = data ? JSON.stringify(data) : "[]";
        });
    </script>
}