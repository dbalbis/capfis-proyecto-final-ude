@page
@model CAPFIS.Pages.Admin.Etapas.CrearEtapaModuloModel
@{
    Layout = "/Pages/Shared/_LayoutAdmin.cshtml";
    ViewData["Title"] = "Crear Etapa";
}

<div class="row">
    <div class="col-md-6 mx-auto">
        <h3 style="color: #FFA500;">Crear Etapa de Módulo</h3>

        <!-- Separador -->
        <hr class="text-secondary my-3"
            style="border: none; border-bottom: 2px solid rgba(255, 165, 0, 0.4); margin: 0 1rem 0.5rem 1rem;" />

        <partial name="_StatusMessage" model="Model.StatusMessage" />
        <div id="statusMessageJS" class="text-danger mb-2"></div>

        <form method="post" id="formCrearEtapa">
            <input type="hidden" asp-for="Input.ContenidoJson" id="contenidoJsonHidden" />

            <!-- Módulo -->
            <div class="mb-3">
                <label asp-for="Input.ModuloInteractivoId" class="form-label">Seleccionar Módulo</label>
                <select asp-for="Input.ModuloInteractivoId" class="form-select">
                    <option value="">-- Seleccione un módulo --</option>
                    @foreach (var mod in Model.Modulos)
                    {
                        <option value="@mod.Id">@mod.Titulo</option>
                    }
                </select>
                <span asp-validation-for="Input.ModuloInteractivoId" class="text-danger"></span>
            </div>

            <!-- Título -->
            <div class="form-floating mb-3">
                <input asp-for="Input.Titulo" class="form-control" placeholder="Título de la etapa" />
                <label asp-for="Input.Titulo">Título de la etapa</label>
                <span asp-validation-for="Input.Titulo" class="text-danger"></span>
            </div>

            <!-- Tipo -->
            <div class="mb-3">
                <label asp-for="Input.Tipo" class="form-label">Tipo de Etapa</label>
                <select asp-for="Input.Tipo" class="form-select" id="tipoEtapaSelect">
                    <option value="Video">Video</option>
                    <option value="Ahorcado">Ahorcado</option>
                    <option value="Quiz">Quiz</option>
                    <option value="SopaDeLetras">Sopa de Letras</option>
                    <option value="EncuentraLaPalabra">Encuentra la Palabra</option>
                </select>
                <span asp-validation-for="Input.Tipo" class="text-danger"></span>
            </div>

            <!-- Video -->
            <div id="contenidoVideo" class="mb-3" style="display:none;">
                <label class="form-label">URL del Video</label>
                <input asp-for="Input.ContenidoUrl" class="form-control" placeholder="https://www.youtube.com/watch?v=..." />
            </div>

            <!-- Ahorcado -->
            <div id="contenidoAhorcado" class="mb-3" style="display:none;">
                <label class="form-label">Palabra a adivinar</label>
                <input asp-for="Input.ContenidoTexto" class="form-control" placeholder="Palabra" />
            </div>

            <!-- Quiz -->
            <div id="contenidoQuiz" class="mb-3" style="display:none;">
                <label class="form-label">Preguntas del Quiz</label>
                <div id="preguntasList"></div>
                <button type="button" class="btn btn-outline-warning btn-sm mt-2" id="agregarPreguntaBtn">Agregar Pregunta</button>
            </div>

            <!-- Sopa de letras -->
            <div id="contenidoSopa" class="mb-3" style="display:none;">
                <label class="form-label">Palabras de la Sopa de Letras</label>
                <div id="palabrasSopaList"></div>
                <button type="button" class="btn btn-outline-warning btn-sm mt-2" id="agregarPalabraSopaBtn">Agregar palabra</button>
            </div>

            <!-- Encuentra la palabra -->
            <div id="contenidoEncuentra" class="mb-3" style="display:none;">
                <label class="form-label">Texto base</label>
                <textarea asp-for="Input.ContenidoTexto" class="form-control" rows="5"></textarea>

                <label class="form-label mt-2">Palabras clave</label>
                <div id="palabrasClaveList"></div>
                <button type="button" class="btn btn-outline-warning btn-sm mt-2" id="agregarPalabraBtn">Agregar palabra</button>
            </div>

            <button type="submit"
                    class="btn btn-outline-warning fw-bold px-4 login-btn w-100"
                    style="border-width:2px; color:#FFA500; border-color:#FFA500; background-color:transparent;">
                Crear Etapa
            </button>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        // Mostrar campos según tipo de etapa
        const tipoSelect = document.getElementById('tipoEtapaSelect');
        const contenidoVideo = document.getElementById('contenidoVideo');
        const contenidoAhorcado = document.getElementById('contenidoAhorcado');
        const contenidoQuiz = document.getElementById('contenidoQuiz');
        const contenidoSopa = document.getElementById('contenidoSopa');
        const contenidoEncuentra = document.getElementById('contenidoEncuentra');

        const preguntasList = document.getElementById('preguntasList');
        const agregarPreguntaBtn = document.getElementById('agregarPreguntaBtn');

        const palabrasSopaList = document.getElementById('palabrasSopaList');
        const agregarPalabraSopaBtn = document.getElementById('agregarPalabraSopaBtn');

        const palabrasClaveList = document.getElementById('palabrasClaveList');
        const agregarPalabraBtn = document.getElementById('agregarPalabraBtn');

        const contenidoJsonHidden = document.getElementById('contenidoJsonHidden');
        const form = document.getElementById('formCrearEtapa');
        const statusDiv = document.getElementById('statusMessageJS');

        function actualizarCampos() {
            const tipo = tipoSelect.value;
            contenidoVideo.style.display = tipo === 'Video' ? 'block' : 'none';
            contenidoAhorcado.style.display = tipo === 'Ahorcado' ? 'block' : 'none';
            contenidoQuiz.style.display = tipo === 'Quiz' ? 'block' : 'none';
            contenidoSopa.style.display = tipo === 'SopaDeLetras' ? 'block' : 'none';
            contenidoEncuentra.style.display = tipo === 'EncuentraLaPalabra' ? 'block' : 'none';
        }
        tipoSelect.addEventListener('change', actualizarCampos);
        actualizarCampos();

        // Quiz
                // Función para enumerar las preguntas
        function renderizarNumerosPreguntas() {
            Array.from(preguntasList.children).forEach((div, idx) => {
                let numeroSpan = div.querySelector('.numeroPregunta');
                if (!numeroSpan) {
                    numeroSpan = document.createElement('span');
                    numeroSpan.classList.add('numeroPregunta', 'fw-bold', 'me-2');
                    div.prepend(numeroSpan); // colocar al inicio del div
                }
                numeroSpan.innerText = `${idx + 1}.`;
            });
        }

        // Quiz: agregar nueva pregunta
        agregarPreguntaBtn?.addEventListener('click', () => {
            const div = document.createElement('div');
            div.classList.add('border', 'p-2', 'mb-2', 'rounded');
            div.innerHTML = `
                <input type="text" class="form-control mb-1" placeholder="Texto de la pregunta" />
                <input type="text" class="form-control mb-1" placeholder="Respuesta 1" />
                <input type="text" class="form-control mb-1" placeholder="Respuesta 2" />
                <input type="text" class="form-control mb-1" placeholder="Respuesta 3" />
                <input type="number" min="1" max="3" class="form-control mb-1" placeholder="Número de respuesta correcta (1-3)" required />
                <button type="button" class="btn btn-outline-danger btn-sm mt-1">Eliminar</button>
            `;
            preguntasList.appendChild(div);

            // Botón eliminar
            div.querySelector('button').addEventListener('click', () => {
                div.remove();
                renderizarNumerosPreguntas(); // actualizar numeración al eliminar
            });

            renderizarNumerosPreguntas(); // actualizar numeración al agregar
        });

        // Sopa
        agregarPalabraSopaBtn?.addEventListener('click', () => {
            const div = document.createElement('div');
            div.classList.add('input-group', 'mb-1');
            div.innerHTML = `
                <input type="text" class="form-control" placeholder="Palabra" />
                <button type="button" class="btn btn-outline-danger" onclick="this.parentElement.remove()">Eliminar</button>
            `;
            palabrasSopaList.appendChild(div);
        });

        // Encuentra
        agregarPalabraBtn?.addEventListener('click', () => {
            const div = document.createElement('div');
            div.classList.add('input-group', 'mb-1');
            div.innerHTML = `
                <input type="text" class="form-control" placeholder="Palabra clave" />
                <button type="button" class="btn btn-outline-danger" onclick="this.parentElement.remove()">Eliminar</button>
            `;
            palabrasClaveList.appendChild(div);
        });

        // Serializar JSON y validar antes de enviar
            form.addEventListener('submit', (e) => {
            statusDiv.innerText = "";
            const tipo = tipoSelect.value;
            let data = null;

            if (tipo === 'Quiz') {
                const preguntas = Array.from(preguntasList.children);
                const quizData = [];

                for (const div of preguntas) {
                    const inputs = div.querySelectorAll('input');
                    const preguntaText = inputs[0].value.trim();
                    const respuestas = [inputs[1].value.trim(), inputs[2].value.trim(), inputs[3].value.trim()];
                    const correcta = parseInt(inputs[4].value);

                    // Validación
                    if (!preguntaText || respuestas.some(r => !r) || isNaN(correcta) || correcta < 1 || correcta > 3) {
                        statusDiv.innerText = "❌ Cada pregunta debe tener texto, 3 respuestas y una respuesta correcta entre 1 y 3.";
                        e.preventDefault();
                        return false;
                    }

                    quizData.push({
                        Pregunta: preguntaText,
                        Respuestas: respuestas,
                        Correcta: correcta
                    });
                }

                data = quizData;

            } else if (tipo === 'SopaDeLetras') {
                data = Array.from(palabrasSopaList.querySelectorAll('input')).map(i => i.value);
            } else if (tipo === 'EncuentraLaPalabra') {
                data = {
                    Texto: contenidoEncuentra.querySelector('textarea').value,
                    PalabrasClave: Array.from(palabrasClaveList.querySelectorAll('input')).map(i => i.value)
                };
            }

            contenidoJsonHidden.value = data ? JSON.stringify(data) : "[]";
        });


    </script>
}
